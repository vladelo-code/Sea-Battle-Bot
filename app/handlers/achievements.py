from aiogram import Dispatcher
from aiogram.types import CallbackQuery

from app.dependencies import db_session
from app.db_utils.player import get_player_by_telegram_id
from app.services.achievements_service import get_player_achievements
from app.keyboards import achievements_menu
from app.messages.texts import NOT_REGISTERED_MESSAGE
from app.logger import setup_logger

logger = setup_logger(__name__)


def _format_achievements(items: list[dict]) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—á–∏–≤–æ–∫ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è.

    Args:
        items (list[dict]): –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞—á–∏–≤–∫–∞—Ö.
            –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è:
              - code (str): —Å–∏—Å—Ç–µ–º–Ω–æ–µ –∏–º—è –∞—á–∏–≤–∫–∏.
              - title (str): –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—á–∏–≤–∫–∏.
              - description (str): –æ–ø–∏—Å–∞–Ω–∏–µ.
              - is_unlocked (bool): –ø–æ–ª—É—á–µ–Ω–∞ –ª–∏ –∞—á–∏–≤–∫–∞.
              - percentage (float): –ø—Ä–æ—Ü–µ–Ω—Ç –∏–≥—Ä–æ–∫–æ–≤ —Å —ç—Ç–æ–π –∞—á–∏–≤–∫–æ–π.

    Returns:
        str: –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –∞—á–∏–≤–∫–∞–º–∏, –≥–æ—Ç–æ–≤–∞—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    lines = ["üéñ <b>–ê—á–∏–≤–∫–∏ –ú–æ—Ä—Å–∫–æ–≥–æ –ë–æ—è</b>"]
    for idx, i in enumerate(items, start=1):
        mark = "‚úÖ" if i.get("is_unlocked") else "‚ùå"
        title = i.get("title") or i.get("code")
        desc = i.get("description") or ""
        percentage = i.get("percentage", 0.0)
        
        lines.append(f"\n<b>{idx}. {title}</b> ‚Äî {mark}")
        lines.append(f"{desc}")
        lines.append(f"üìä <i>–£ {percentage}% –∏–≥—Ä–æ–∫–æ–≤ —É–∂–µ –µ—Å—Ç—å —ç—Ç–∞ –∞—á–∏–≤–∫–∞</i>")
    return "\n".join(lines)


async def achievements_menu_callback(callback: CallbackQuery) -> None:
    """
    –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –∞—á–∏–≤–æ–∫ –∏–≥—Ä–æ–∫–∞.

    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ê—á–∏–≤–∫–∏" –±–æ—Ç:
      1. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–≥—Ä–æ–∫–∞.
      2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞—á–∏–≤–æ–∫ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å –∏–∑ –±–∞–∑—ã.
      3. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫.

    Args:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –∫–æ–ª–±—ç–∫–∞ –æ—Ç Telegram.
    """
    logger.info(f"üéñ –ò–≥—Ä–æ–∫ @{callback.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª –∞—á–∏–≤–∫–∏!")
    try:
        await callback.answer()
    except Exception:
        pass

    with db_session() as db:
        player = get_player_by_telegram_id(db, str(callback.from_user.id))
        if not player:
            await callback.message.edit_text(NOT_REGISTERED_MESSAGE, reply_markup=achievements_menu())
            return
        items = get_player_achievements(db, callback.from_user.id)

    text = _format_achievements(items)
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=achievements_menu())


def register_handler(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –º–µ–Ω—é –∞—á–∏–≤–æ–∫ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ Aiogram.

    Args:
        dp (Dispatcher): –î–∏—Å–ø–µ—Ç—á–µ—Ä –±–æ—Ç–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è —Ö–µ–Ω–¥–ª–µ—Ä.
    """
    dp.callback_query.register(achievements_menu_callback, lambda c: c.data == "achievements_menu")
