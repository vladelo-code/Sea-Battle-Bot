from aiogram import Dispatcher, types
from aiogram.filters import Command

from app.keyboards import main_menu
from app.logger import setup_logger
from app.db_utils.player import get_or_create_player
from app.dependencies import get_db
from app.messages.texts import START_MESSAGE

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logger = setup_logger(__name__)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start_command(message: types.Message):
    logger.info(f'üëã –ò–≥—Ä–æ–∫ @{message.from_user.username} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞!')

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
    db_gen = get_db()
    db = next(db_gen)
    try:
        get_or_create_player(db, telegram_id=str(message.from_user.id), username=message.from_user.username)
    finally:
        db_gen.close()

    await message.answer(START_MESSAGE, reply_markup=main_menu(), parse_mode="HTML", disable_web_page_preview=True)


def register_handler(dp: Dispatcher):
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –∫–æ–º–∞–Ω–¥–µ /start –∏–ª–∏ 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
    dp.message.register(start_command, Command("start"))
    dp.message.register(start_command, lambda message: message.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
