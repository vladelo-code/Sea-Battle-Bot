from aiogram import Dispatcher
from aiogram.types import CallbackQuery

from app.dependencies import db_session
from app.db_utils.player import get_player_by_telegram_id
from app.db_utils.bot_stats import get_aggregated_bot_stats
from app.keyboards import bot_analytic_menu
from app.messages.texts import BOT_ANALYTICS_TEMPLATE, NO_BOT_ANALYTICS
from app.logger import setup_logger

logger = setup_logger(__name__)


async def bot_analytics_callback(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞" –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–≥—Ä–æ–∫—É
    –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –∏–≥—Ä–∞–º –ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞.

    1. –ü–æ–ª—É—á–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –ø–æ telegram_id.
    2. –ü–æ–ª—É—á–∞–µ—Ç –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä –ø—Ä–æ—Ç–∏–≤ –±–æ—Ç–∞.
    3. –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º BOT_ANALYTICS_TEMPLATE.
    4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–æ—Ç–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.
    5. –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ NO_BOT_ANALYTICS.

    Args:
        callback (CallbackQuery): –æ–±—ä–µ–∫—Ç –∫–æ–ª–±—ç–∫–∞ –æ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏.

    Returns:
        None
    """
    logger.info(f'üìà –ò–≥—Ä–æ–∫ @{callback.from_user.username} –ø–æ–ª—É—á–∏–ª —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.')
    try:
        await callback.answer()
    except Exception:
        pass

    with db_session() as db:
        player = get_player_by_telegram_id(db, str(callback.from_user.id))
        if not player:
            await callback.message.edit_text(NO_BOT_ANALYTICS, reply_markup=bot_analytic_menu())
            return

        data = get_aggregated_bot_stats(db, callback.from_user.id)

    if not data or data.get("total_games", 0) == 0:
        await callback.message.edit_text(NO_BOT_ANALYTICS, reply_markup=bot_analytic_menu())
        return

    by_diff = data.get("by_difficulty", {})

    def diff(name: str):
        """
        –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä, –ø–æ–±–µ–¥ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–π
        –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–º—É —É—Ä–æ–≤–Ω—é —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.
        """
        d = by_diff.get(name, {})
        return d.get("games", 0), d.get("wins", 0), d.get("losses", 0)

    easy_g, easy_w, easy_l = diff("easy")
    med_g, med_w, med_l = diff("medium")
    hard_g, hard_w, hard_l = diff("hard")
    super_hard_g, super_hard_w, super_hard_l = diff("super_hard")

    text = (
        BOT_ANALYTICS_TEMPLATE.format(
            total_games=data["total_games"],
            total_wins=data["total_wins"],
            total_losses=data["total_losses"],
            easy_games=easy_g, easy_wins=easy_w, easy_losses=easy_l,
            medium_games=med_g, medium_wins=med_w, medium_losses=med_l,
            hard_games=hard_g, hard_wins=hard_w, hard_losses=hard_l,
            super_hard_games=super_hard_g, super_hard_wins=super_hard_w, super_hard_losses=super_hard_l,
        )
    )

    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=bot_analytic_menu())


def register_handler(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫–∞ "bot_analytics" –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ.

    Args:
        dp (Dispatcher): –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ Aiogram.

    Returns:
        None
    """
    dp.callback_query.register(bot_analytics_callback, lambda c: c.data == "bot_analytics")
