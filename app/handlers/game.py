from aiogram import Dispatcher, types
from aiogram.filters import Command

from app.storage import create_game, join_game, get_game, get_board, switch_turn, get_turn, delete_game
from app.game_logic import print_board, process_shot, check_victory
from app.keyboards import main_menu, connect_menu, playing_menu, current_game_menu, rating_menu
from app.logger import setup_logger

from app.db_utils.match import create_match, update_match_result
from app.db_utils.stats import update_stats_after_match, get_stats, get_top_players
from app.db_utils.player import get_or_create_player, get_player_by_telegram_id
from app.dependencies import get_db

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logger = setup_logger(__name__)

# –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏–≥—Ä—ã
user_game_requests = {}

# –°–ø–∏—Å–æ–∫ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
coordinates = ['A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'A9', 'A10',
               'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'B7', 'B8', 'B9', 'B10',
               'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'C10',
               'D1', 'D2', 'D3', 'D4', 'D5', 'D6', 'D7', 'D8', 'D9', 'D10',
               'E1', 'E2', 'E3', 'E4', 'E5', 'E6', 'E7', 'E8', 'E9', 'E10',
               'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10',
               'G1', 'G2', 'G3', 'G4', 'G5', 'G6', 'G7', 'G8', 'G9', 'G10',
               'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'H10',
               'I1', 'I2', 'I3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9', 'I10',
               'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8', 'J9', 'J10']

# –°–æ–∑–¥–∞—ë–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏–≥—Ä–æ–∫–æ–≤ –∏ –º–∞—Ç—á–µ–π, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω–∏ —É—á–∞—Å—Ç–≤—É—é—Ç
current_games = {}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ö–æ–¥–∞ (–≤—ã—Å—Ç—Ä–µ–ª–∞) –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º —Å –∫–Ω–æ–ø–æ–∫
async def shot_command_coord(message: types.Message):
    game_id = str(current_games[message.from_user.id])
    game = get_game(game_id)

    if message.text == "üè≥Ô∏è –°–¥–∞—Ç—å—Å—è":
        logger.info(f'üè≥Ô∏è –ò–≥—Ä–æ–∫ @{message.from_user.username} —Å–¥–∞–ª—Å—è, ID –∏–≥—Ä—ã: {game_id}')
        opponent_id = game["player1"] if game["turn"] == game["player2"] else game["player2"]

        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ –≤ –ë–î: –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ‚Äî –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫, —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî surrender
        db_gen = get_db()
        db = next(db_gen)
        try:
            update_match_result(db, game_id, winner_id=opponent_id, result="surrender")
            update_stats_after_match(db, winner_id=opponent_id, loser_id=message.from_user.id)
        finally:
            db_gen.close()

        del current_games[message.from_user.id]
        del current_games[opponent_id]

        delete_game(game_id)

        await message.answer(f"üè≥Ô∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ! –í—ã —Å–¥–∞–ª–∏—Å—å –≤ –∏–≥—Ä–µ!", reply_markup=main_menu())
        await message.bot.send_message(opponent_id, f"üéâ –ü–æ–±–µ–¥–∞! –ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–¥–∞–ª—Å—è!", reply_markup=main_menu())
    else:
        coord = message.text.upper()
        x = ord(coord[0]) - ord('A')
        y = int(coord[1:]) - 1

        if game and message.from_user.id == get_turn(game_id):
            opponent_id = game["player1"] if game["turn"] == game["player2"] else game["player2"]
            board = get_board(game_id, opponent_id)

            if 0 <= x < 10 and 0 <= y < 10:
                hit = process_shot(board, x, y)

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É –ø–æ—Å–ª–µ –≤—ã—Å—Ç—Ä–µ–ª–∞
                if check_victory(board):
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á–∞ –≤ –ë–î: –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ‚Äî current user, —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî normal
                    db_gen = get_db()
                    db = next(db_gen)
                    try:
                        update_match_result(db, game_id, winner_id=message.from_user.id, result="normal")
                        update_stats_after_match(db, winner_id=message.from_user.id, loser_id=opponent_id)
                    finally:
                        db_gen.close()

                    del current_games[message.from_user.id]
                    del current_games[opponent_id]
                    winner = message.from_user.username
                    loser = await message.bot.get_chat(opponent_id)
                    await message.answer(f"üéâ –ü–æ–±–µ–¥–∞! –í—ã —É–Ω–∏—á—Ç–æ–∂–∏–ª–∏ –≤—Å–µ –∫–æ—Ä–∞–±–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞!", reply_markup=main_menu())
                    await message.bot.send_message(opponent_id,
                                                   f"üí• –ü–æ—Ä–∞–∂–µ–Ω–∏–µ! –í—Å–µ –≤–∞—à–∏ –∫–æ—Ä–∞–±–ª–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω—ã.\n–ü–æ–±–µ–¥–∏–ª @{winner}!",
                                                   reply_markup=main_menu())
                    delete_game(game_id)
                    return

                switch_turn(game_id)

                result = "üí• –ü–æ–ø–∞–¥–∞–Ω–∏–µ!" if hit else "‚ùå –ú–∏–º–æ!"
                board_view = print_board(board, hide_ships=True)
                await message.answer(
                    f"{result}\n–û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ –ø–æ–ª–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞:\n{board_view}\n –û–∂–∏–¥–∞–π—Ç–µ —Ö–æ–¥ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞!",
                    parse_mode="html", reply_markup=types.ReplyKeyboardRemove())
                await message.bot.send_message(
                    opponent_id,
                    f"–•–æ–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∑–∞–≤–µ—Ä—à—ë–Ω.\n"
                    f"–û–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–µ –ø–æ–ª–µ –ø–æ—Å–ª–µ –≤—ã—Å—Ç—Ä–µ–ª–∞:\n{board_view}\n –í–∞—à —Ö–æ–¥!", parse_mode="html",
                    reply_markup=playing_menu(game_id, message.from_user.id))
            else:
                await message.answer("‚ùó –ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç A1.")
        else:
            await message.answer("‚ùó –°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥ –∏–ª–∏ –∏–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")


def register_handler(dp: Dispatcher):
    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Ö–æ–¥–∞ (–≤—ã—Å—Ç—Ä–µ–ª–∞) –ø–æ —Ñ—Ä–∞–∑–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º –∏–ª–∏ —Å–¥–∞–µ–º—Å—è
    dp.message.register(shot_command_coord, lambda message: message.text == "üè≥Ô∏è –°–¥–∞—Ç—å—Å—è")
    dp.message.register(shot_command_coord, lambda message: message.text in coordinates)
