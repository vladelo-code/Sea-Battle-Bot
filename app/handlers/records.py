from aiogram import Dispatcher
from aiogram.types import CallbackQuery
from datetime import datetime

from app.keyboards import back_to_main_menu
from app.logger import setup_logger
from app.messages.texts import GAME_RECORDS_HEADER, NO_RECORDS_MESSAGE
from app.dependencies import db_session
from app.db_utils.records import (
    get_fastest_game,
    get_longest_win_streak,
    get_longest_loss_streak,
    get_most_played_player,
    get_most_time_played_player
)

logger = setup_logger(__name__)


def format_duration(seconds: float) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥."""
    if seconds < 60:
        return f"{seconds:.0f} —Å–µ–∫"
    elif seconds < 3600:
        minutes = seconds / 60
        return f"{minutes:.1f} –º–∏–Ω"
    else:
        hours = seconds / 3600
        return f"{hours:.1f} —á"


async def show_records_callback(callback: CallbackQuery) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback-–∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∫–æ—Ä–¥–æ–≤ –∏–≥—Ä—ã.
    - –õ–æ–≥–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    - –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∫–æ—Ä–¥—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç —Å —Ä–µ–∫–æ—Ä–¥–∞–º–∏.

    :param callback: –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    logger.info(f"üéñÔ∏è –ò–≥—Ä–æ–∫ @{callback.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–µ–∫–æ—Ä–¥—ã –∏–≥—Ä—ã!")
    try:
        await callback.answer()
    except Exception:
        pass
    
    try:
        with db_session() as db:
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–∫–æ—Ä–¥—ã
            fastest_game = get_fastest_game(db)
            win_streak = get_longest_win_streak(db)
            loss_streak = get_longest_loss_streak(db)
            most_games = get_most_played_player(db)
            most_time = get_most_time_played_player(db)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–µ–∫–æ—Ä–¥
            has_records = any([fastest_game, win_streak, loss_streak, most_games, most_time])
            
            if not has_records:
                await callback.message.edit_text(
                    GAME_RECORDS_HEADER + NO_RECORDS_MESSAGE,
                    parse_mode="HTML",
                    reply_markup=back_to_main_menu()
                )
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–µ–∫–æ—Ä–¥–∞–º–∏
            records_text = GAME_RECORDS_HEADER
            
            # –°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞
            if fastest_game:
                match, player1, player2 = fastest_game
                try:
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ –¥–∞—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞–º–∏
                    if isinstance(match.started_at, str):
                        started_at = datetime.fromisoformat(match.started_at.replace('Z', '+00:00'))
                    else:
                        started_at = match.started_at
                        
                    if isinstance(match.ended_at, str):
                        ended_at = datetime.fromisoformat(match.ended_at.replace('Z', '+00:00'))
                    else:
                        ended_at = match.ended_at
                    
                    duration_seconds = (ended_at - started_at).total_seconds()
                    fastest_date = ended_at.strftime("%d.%m.%Y –≤ %H:%M")
                    
                    records_text += f"‚ö° <b>–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞:</b>\n"
                    records_text += f"‚è±Ô∏è –í—Ä–µ–º—è: {int(duration_seconds)} —Å–µ–∫.\n"
                    records_text += f"üìÖ –î–∞—Ç–∞: {fastest_date}\n"
                    records_text += f"üë• –ò–≥—Ä–æ–∫–∏: @{player1} vs @{player2}\n\n"
                except (ValueError, TypeError) as e:
                    records_text += "‚ö° <b>–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞:</b>\n‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö\n\n"
            else:
                records_text += "‚ö° <b>–°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –∏–≥—Ä–∞:</b>\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n\n"
            
            # –°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ–±–µ–¥
            if win_streak:
                streak_count, player = win_streak
                records_text += f"üî• <b>–°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ–±–µ–¥:</b>\n"
                records_text += f"üèÜ @{player} ‚Äî {streak_count} –ø–æ–±–µ–¥ –ø–æ–¥—Ä—è–¥\n\n"
            else:
                records_text += "üî• <b>–°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ–±–µ–¥:</b>\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n\n"
            
            # –°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ—Ä–∞–∂–µ–Ω–∏–π
            if loss_streak:
                streak_count, player = loss_streak
                records_text += f"üí• <b>–°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ—Ä–∞–∂–µ–Ω–∏–π:</b>\n"
                records_text += f"üòî @{player} ‚Äî {streak_count} –ø–æ—Ä–∞–∂–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥\n\n"
            else:
                records_text += "üí• <b>–°–∞–º—ã–π –¥–æ–ª–≥–∏–π —Å—Ç—Ä–∏–∫ –ø–æ—Ä–∞–∂–µ–Ω–∏–π:</b>\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n\n"
            
            # –°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–≥—Ä)
            if most_games:
                games_count, player = most_games
                records_text += f"üéÆ <b>–°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–≥—Ä):</b>\n"
                records_text += f"üìä @{player} ‚Äî {games_count} –∏–≥—Ä\n\n"
            else:
                records_text += "üéÆ <b>–°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏–≥—Ä):</b>\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö\n\n"
            
            # –°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –≤—Ä–µ–º–µ–Ω–∏)
            if most_time:
                time_minutes, player = most_time
                records_text += f"‚è∞ <b>–°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –≤—Ä–µ–º–µ–Ω–∏):</b>\n"
                records_text += f"üïê @{player} ‚Äî {time_minutes} –º–∏–Ω.\n"
            else:
                records_text += "‚è∞ <b>–°–∞–º—ã–π –∏–≥—Ä–∞—é—â–∏–π –∏–≥—Ä–æ–∫ (–ø–æ –≤—Ä–µ–º–µ–Ω–∏):</b>\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            
            await callback.message.edit_text(
                records_text,
                parse_mode="HTML",
                reply_markup=back_to_main_menu()
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∫–æ—Ä–¥–æ–≤: {e}")
        await callback.message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∫–æ—Ä–¥–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            parse_mode="HTML",
            reply_markup=back_to_main_menu()
        )


def register_handler(dp: Dispatcher) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫:
    - Callback-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫

    :param dp: –û–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ aiogram.
    """
    dp.callback_query.register(show_records_callback, lambda c: c.data == "show_records")
